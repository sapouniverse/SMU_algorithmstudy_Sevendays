크루스칼 알고리즘

시작점이 주어졌을때, 가장 최단 경로를 알려주는 알고리즘

1. 최초, 모든 간선을 가중치에 따라 오름차순으로 정렬
2. 가중치가 가장 낮은 간선부터 트리 증가시킨다.
3. n-1r개의 간선이 선택될 때까지 두번째 과정을 반복한다. 

2,3번에서 union_find라는 합집합을 구하는 함수를 사용하게 된다. 

int find(int v)
{
        if(parent[v] == v) //자기 자신과 부모가 같으면 자기자신을 반환한다. 
                return v;
        else 
                return find(parent[v]); //자기자신과 다르면 부모의 부모값을 반환한다.
}

void union(int v1, int v2) //union은 부모가 작은 것에다가 간선을 연결시킨다. 
{
        int x, y;
        x = find(v1);
        y = find(v2);
        
        if(x < y)
                parent[y] = x; //작은 부모인것에다가 연결시킨다.
        else parent[x] = y;
}
 
union_find를 이용해서 사이클이 생기지 않도록 main에서 설정해주면 크루스칼 알고리즘의 코드가 완성된다.         
